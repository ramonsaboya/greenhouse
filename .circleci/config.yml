version: 2.1

orbs:
  gcp-gke: circleci/gcp-gke@0.2.0

jobs:
  order_complete_updater:
    working_directory: ~/order-complete-updater
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: order-complete-updater-{{ checksum "order-complete-updater/pom.xml" }}
      - run:
          name: Running tests
          command: mvn -f order-complete-updater/pom.xml test
      - save_cache:
          paths:
            - ~/.m2
          key: order-complete-updater-{{ checksum "order-complete-updater/pom.xml" }}
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PW}
      - run: docker image build order-complete-updater/ -t devopsgreenhouse/order-complete-updater:$CIRCLE_SHA1
      - run: docker image push devopsgreenhouse/order-complete-updater:$CIRCLE_SHA1
      #- store_test_results:
      #    path:
      #- store_artifacts:
      #    path:

  order_service:
    working_directory: ~/order-service
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: order-service-{{ checksum "order-service/pom.xml" }}
      - run:
          name: Running tests
          command: mvn -f order-service/pom.xml test
      - save_cache:
          paths:
            - ~/.m2
          key: order-service-{{ checksum "order-service/pom.xml" }}
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PW}
      - run: docker image build order-service/ -t devopsgreenhouse/order-service:$CIRCLE_SHA1
      - run: docker image push devopsgreenhouse/order-service:$CIRCLE_SHA1
      #- store_test_results:
      #    path:
      #- store_artifacts:
      #    path:

  payment_distribution:
    working_directory: ~/payment-distribution
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: payment-distribution-{{ checksum "payment-distribution/pom.xml" }}
      - run:
          name: Running tests
          command: mvn -f payment-distribution/pom.xml test
      - save_cache:
          paths:
            - ~/.m2
          key: payment-distribution-{{ checksum "payment-distribution/pom.xml" }}
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PW}
      - run: docker image build payment-distribution/ -t devopsgreenhouse/payment-distribution:$CIRCLE_SHA1
      - run: docker image push devopsgreenhouse/payment-distribution:$CIRCLE_SHA1
      #- store_test_results:
      #    path:
      #- store_artifacts:
      #    path:

  payment_service:
    working_directory: ~/payment-service
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: payment-service-{{ checksum "payment-service/pom.xml" }}
      - run:
          name: Running tests
          command: mvn -f payment-service/pom.xml test
      - save_cache:
          paths:
            - ~/.m2
          key: payment-service-{{ checksum "payment-service/pom.xml" }}
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PW}
      - run: docker image build payment-service/ -t devopsgreenhouse/payment-service:$CIRCLE_SHA1
      - run: docker image push devopsgreenhouse/payment-service:$CIRCLE_SHA1
      #- store_test_results:
      #    path:
      #- store_artifacts:
      #    path:

  restaurant_service:
    working_directory: ~/restaurant-service
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: restaurant-service-{{ checksum "restaurant-service/pom.xml" }}
      - run:
          name: Running tests
          command: mvn -f restaurant-service/pom.xml test
      - save_cache:
          paths:
            - ~/.m2
          key: restaurant-service-{{ checksum "restaurant-service/pom.xml" }}
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PW}
      - run: docker image build restaurant-service/ -t devopsgreenhouse/restaurant-service:$CIRCLE_SHA1
      - run: docker image push devopsgreenhouse/restaurant-service:$CIRCLE_SHA1
      #- store_test_results:
      #    path:
      #- store_artifacts:
      #    path:

  hystrix_dashboard:
    working_directory: ~/hystrix-dashboard
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: hystrix-dashboard-{{ checksum "hystrix-dashboard/pom.xml" }}
      - run:
          name: Running tests
          command: mvn -f hystrix-dashboard/pom.xml test
      - save_cache:
          paths:
            - ~/.m2
          key: hystrix-dashboard-{{ checksum "hystrix-dashboard/pom.xml" }}
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PW}
      - run: docker image build hystrix-dashboard/ -t devopsgreenhouse/hystrix-dashboard:$CIRCLE_SHA1
      - run: docker image push devopsgreenhouse/hystrix-dashboard:$CIRCLE_SHA1
      #- store_test_results:
      #    path:
      #- store_artifacts:
      #    path:

  elasticsearch:
    working_directory: ~/elasticsearch
    machine: true
    steps:
      - checkout
      - run:
          name: Logging in on the docker hub
          command: cd elasticsearch && docker login -u ${DOCKER_USER} -p ${DOCKER_PW}
      - run:
          name: Building docker image
          command: cd elasticsearch && docker image build --build-arg ELK_VERSION=$ELK_VERSION . -t devopsgreenhouse/elasticsearch:$CIRCLE_SHA1
      - run:
          name: Pushing docker image
          command: cd elasticsearch && docker image push devopsgreenhouse/elasticsearch:$CIRCLE_SHA1

  kibana:
    working_directory: ~/kibana
    machine: true
    steps:
      - checkout
      - run:
          name: Logging in on the docker hub
          command: cd kibana && docker login -u ${DOCKER_USER} -p ${DOCKER_PW}
      - run:
          name: Building docker image
          command: cd kibana && docker image build --build-arg ELK_VERSION=$ELK_VERSION . -t devopsgreenhouse/kibana:$CIRCLE_SHA1
      - run:
          name: Pushing docker image
          command: cd kibana && docker image push devopsgreenhouse/kibana:$CIRCLE_SHA1

  logstash:
    working_directory: ~/logstash
    machine: true
    steps:
      - checkout
      - run:
          name: Logging in on the docker hub
          command: cd logstash && docker login -u ${DOCKER_USER} -p ${DOCKER_PW}
      - run:
          name: Building docker image
          command: cd logstash && docker image build --build-arg ELK_VERSION=$ELK_VERSION . -t devopsgreenhouse/logstash:$CIRCLE_SHA1
      - run:
          name: Pushing docker image
          command: cd logstash && docker image push devopsgreenhouse/logstash:$CIRCLE_SHA1

  deploy:
    machine: true
    steps:
      - gcp-gke/install
      - gcp-gke/init
      - gcp-gke/rollout-image:
          cluster: greenhouse
          deployment: elasticsearch
          container: elasticsearch
          image: devopsgreenhouse/elasticsearch:$CIRCLE_SHA1
      - gcp-gke/rollout-image:
          cluster: greenhouse
          deployment: kibana
          container: kibana
          image: devopsgreenhouse/kibana:$CIRCLE_SHA1
      - gcp-gke/rollout-image:
          cluster: greenhouse
          deployment: logstash
          container: logstash
          image: devopsgreenhouse/logstash:$CIRCLE_SHA1
      - gcp-gke/rollout-image:
          cluster: greenhouse
          deployment: order-complete-updater
          container: order-complete-updater
          image: devopsgreenhouse/order-complete-updater:$CIRCLE_SHA1
      - gcp-gke/rollout-image:
          cluster: greenhouse
          deployment: order-service
          container: order-service
          image: devopsgreenhouse/order-service:$CIRCLE_SHA1
      - gcp-gke/rollout-image:
          cluster: greenhouse
          deployment: payment-distribution
          container: payment-distribution
          image: devopsgreenhouse/payment-distribution:$CIRCLE_SHA1
      - gcp-gke/rollout-image:
          cluster: greenhouse
          deployment: payment-service
          container: payment-service
          image: devopsgreenhouse/payment-service:$CIRCLE_SHA1
      - gcp-gke/rollout-image:
          cluster: greenhouse
          deployment: restaurant-service
          container: restaurant-service
          image: devopsgreenhouse/restaurant-service:$CIRCLE_SHA1
      - gcp-gke/rollout-image:
          cluster: greenhouse
          deployment: hystrix-dashboard
          container: hystrix-dashboard
          image: devopsgreenhouse/hystrix-dashboard:$CIRCLE_SHA1

workflows:
  version: 2
  build_test_and_deliver:
    jobs:
      - elasticsearch
      - kibana
      - logstash
      - order_complete_updater
      - order_service
      - payment_distribution
      - payment_service
      - restaurant_service
      - hystrix_dashboard
      - deploy:
          filters:
              branches:
                  only: master
          requires:
            - elasticsearch
            - kibana
            - logstash
            - order_complete_updater
            - order_service
            - payment_distribution
            - payment_service
            - restaurant_service
            - hystrix_dashboard
